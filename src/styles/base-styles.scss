:root {
    color-scheme: var(--color-scheme);
    accent-color: var(--clr-primary);
    color: var(--clr-body);
    background-color: var(--clr-base-100);
}

h1,
h2,
h3,
h4,
h5,
h6 {
    color: var(--clr-header);
}

@each $type in "none", "block", "inline", "flex", "grid", "contents" {
    dialog.d-#{$type} {
        display: none;
    }

    .d-#{$type},
    dialog[open].d-#{$type} {
        display: #{$type};
    }
}

.flex {
    &-wrap {
        flex-wrap: wrap;

        &-reverse {
            flex-wrap: wrap-reverse;
        }

        &-none {
            flex-wrap: nowrap;
        }
    }

    &-direction {
        &-row {
            flex-direction: row;

            &-reverse {
                flex-direction: row-reverse;
            }
        }

        &-col {
            flex-direction: column;

            &-reverse {
                flex-direction: column-reverse;
            }
        }
    }
}

.grid {
    &-template {
        &-columns {
            grid-template-columns: var(--grid-template-columns);
        }

        &-rows {
            grid-template-rows: var(--grid-template-rows);
        }
    }
}

.no-border {
    border: none;
}

.reset-list {
    list-style: none;
    padding: 0;
}

.no-line-height {
    line-height: 1;
}

.no-border {
    border: none;
}

.prose {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        margin-block-end: 0.5rem;
    }

    p {
        margin-block-end: 1rem;
    }
}

.font-mono {
    font-family: monospace;
}

a.no-link {
    color: currentColor;
    text-decoration: none;
}

@each $type in "hidden", "scroll", "auto" {
    .overflow-#{$type},
    .overflow-x-#{$type} {
        overflow-x: #{$type};
    }

    .overflow-#{$type},
    .overflow-y-#{$type} {
        overflow-y: #{$type};
    }
}

span {
    &.info,
    &.success,
    &.warning,
    &.error {
        max-inline-size: fit-content;

        padding-block: 0.25rem;
        padding-inline: 0.5rem;
        border-radius: 0.5rem;
    }

    @each $type in "info", "success", "warning", "error" {
        &.#{$type} {
            color: var(--clr-#{$type}-content);
            background-color: var(--clr-#{$type});
        }
    }
}

@each $cursor-type in "pointer", "none" {
    .cursor-#{$cursor-type} {
        cursor: #{$cursor-type};
    }
}
